board = [" " for _ in range(9)]
def print_board(board):
    print(f"{board[0]} | {board[1]} | {board[2]}")
    print("-" * 9)
    print(f"{board[3]} | {board[4]} | {board[5]}")
    print("-" * 9)
    print(f"{board[6]} | {board[7]} | {board[8]}")
def is_game_over(board):
    win_patterns = [(0, 1, 2), (3, 4, 5), (6, 7, 8),
                    (0, 3, 6), (1, 4, 7), (2, 5, 8),
                    (0, 4, 8), (2, 4, 6)]
    for pattern in win_patterns:
        if board[pattern[0]] == board[pattern[1]] == board[pattern[2]] != " ":
            return True
    if " " not in board:
        return True
    return False
def get_player_move(player):
    while True:
        try:
            move = int(input(f"Player {player}, enter your move (1-9): ")) - 1
            if 0 <= move < 9 and board[move] == " ":
                return move
            else:
                print("Invalid move. Please choose an empty position between 1 and 9.")
        except ValueError:
            print("Invalid input. Please enter a number between 1 and 9.")
current_player = "X"
while not is_game_over(board):
    print_board(board)
    move = get_player_move(current_player)
    board[move] = current_player
    current_player = "O" if current_player == "X" else "X"
print_board(board)
if is_game_over(board):
    print("Game over. It's a tie!" if " " not in board else f"Player {current_player}Â wins!")
